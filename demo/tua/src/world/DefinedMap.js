import Map from './Map.js'
import Array2D from '../utils/Array2d.js'
import  { DEFINED_MAPS as DM, MAP_ITEMS } from '../utils/Const.js'

export default class DefinedMap extends Map {
    constructor(game, tileAtlas, tileSize, setLength, scene, map) {
        super(game, tileAtlas, tileSize, setLength, null, scene)
        this.rows = map.floor.length
        this.cols = map.floor[0].length
        this.startPos = Map.tileToWorldPosition(map.start, tileSize)
        this.buildMap(map)
        this.buildFeature(map.objectPos, MAP_ITEMS.SwitchOff)
        this.buttons.push({ x: map.objectPos[0] * tileSize, y: map.objectPos[1] * tileSize })
    }

    update() {}

    draw() {
        super.draw()
    }
    
    /**
     * Build map with one layered map generated by tiled.
     */
    buildMap(map) {
        this.map0 = new Array2D(map.size, 0)
        this.map1 = new Array2D(map.size, 0)
        this.map2 = new Array2D(map.size, 0)
        this.map3 = new Array2D(map.size, 0)

        for (let row = 0; row < map.size[1]; row++) {
            for (let col = 0; col < map.size[0]; col++) {
                this.map0.set([col, row], map.floor[row][col])
                this.map1.set([col, row], map.object0[row][col])
                this.map2.set([col, row], map.object1[row][col])
                this.map3.set([col, row], map.top[row][col])
            }
        }
        this.mapLayerLower.push(this.map0)
        this.mapLayerLower.push(this.map1)
        this.mapLayerLower.push(this.map2)
    }

    buildFeature(pos, item) {
        super.createObject(this.map1, pos, item)
    }

    getStartPos() {
        return this.startPos
    }
}