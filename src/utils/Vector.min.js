export default class Vector{constructor(a,b){this.x=a,this.y=b,this.magnitude=Math.sqrt(this.lengthSq())}static vectorFromEntity(a){return new Vector(a.x,a.y)}addX(a){return this.x+=a.x,this}addY(a){return this.y+=a.y,this}add(a){return this.x+=a.x,this.y+=a.y,this}addScalar(a){return this.x+=a,this.y+=a,this}addScalarX(a){return this.x+=a,this}addScalarY(a){return this.y+=a,this}subtractX(a){return this.x-=a.x,this}subtractY(a){return this.y-=a.y,this}subtract(a){return this.x-=a.x,this.y-=a.y,this}subtractScalar(a){return this.x-=a,this.y-=a,this}subtractScalarX(a){return this.x-=a,this}subtractScalarY(a){return this.y-=a,this}distance(a){return Math.sqrt(this.distanceSq(a))}distanceSq(a){const b=this.distanceX(a),c=this.distanceY(a);return b*b+c*c}distanceX(a){return this.x-a.x}distanceY(a){return this.y-a.y}lengthSq(){return this.x*this.x+this.y*this.y}static radian2degrees(a){return a*degrees}static degrees2radian(a){return a/degrees}static vectorLength(a=this){return Math.sqrt(a.lengthSq())}}const degrees=180/Math.PI